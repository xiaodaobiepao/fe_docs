(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{213:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"关于javascript类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于javascript类型"}},[t._v("#")]),t._v(" 关于JavaScript类型")]),t._v(" "),s("h2",{attrs:{id:"类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),s("p",[t._v("javaScript语言的每一个值都属于一种类型，ES5规定了5种语言类型，ES6新增了Symbol类型，还有最近加入提案的BigInt类型，共有8种语言类型：")]),t._v(" "),s("ul",[s("li",[t._v("Undefined")]),t._v(" "),s("li",[t._v("Null")]),t._v(" "),s("li",[t._v("Boolean")]),t._v(" "),s("li",[t._v("String")]),t._v(" "),s("li",[t._v("Number")]),t._v(" "),s("li",[t._v("Symbor")]),t._v(" "),s("li",[t._v("BigInt")]),t._v(" "),s("li",[t._v("Object")])]),t._v(" "),s("p",[t._v("除了BigInt一般同学可能不知道，其他数据类型应该都听过。")]),t._v(" "),s("h3",{attrs:{id:"undefined、null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined、null"}},[t._v("#")]),t._v(" Undefined、Null")]),t._v(" "),s("p",[s("strong",[t._v("Undefined")]),t._v(" 类型表示未定义，值为undefined, 一般可以用全局变量undefined或者void 操作符来表达这个值。")]),t._v(" "),s("p",[s("strong",[t._v("undefined")]),t._v(" 是全局变量而不是关键字，在旧版的浏览器中可能会被无意中篡改，所以我们可以用void 0来获取undefined值")]),t._v(" "),s("p",[s("strong",[t._v("Null")]),t._v(" 类型只有一个值 "),s("strong",[t._v("null")]),t._v("，它的语义表示空，但它和 undefined 不同，他是js关键字，不可以被当做变量，因此不会被篡改。")]),t._v(" "),s("h3",{attrs:{id:"boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" Boolean")]),t._v(" "),s("p",[s("strong",[t._v("Boolean")]),t._v(" 表示逻辑真与假，没什么好说的")]),t._v(" "),s("h3",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("p",[s("strong",[t._v("String")]),t._v(" 表示文本数据，最大长度为 "),s("strong",[t._v("2"),s("sup",[t._v("^")]),t._v("53-1")]),t._v("，但这个长度并不是字符数，而是受字符串的编码长度影响。")]),t._v(" "),s("p",[t._v("字符串的操作 "),s("strong",[t._v("charAt、charCodeAt、length")]),t._v(" 等方法针对的都是 "),s("strong",[t._v("UTF16编码")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("Note：现行的字符集国际标准，字符是以 Unicode 的方式表示的，每一个 Unicode 的码点表示一个字符，理论上，Unicode 的范围是无限的。UTF 是 Unicode 的编码方式，规定了码点在计算机中的表示方法，常见的有 UTF16 和 UTF8。 Unicode 的码点通常用 U+??? 来表示，其中 ??? 是十六进制的码点值。 0-65536（U+0000 - U+FFFF）的码点被称为基本字符区域（BMP）。")])]),t._v(" "),s("p",[s("strong",[t._v("JavaScript")]),t._v(" 字符串把每个UTF16单元当做一个字符处理，处理非BMP(超过U+0000 - U+FFFF范围)的字符时，可能会出错，所以ES6推出了"),s("code",[t._v("fromCodePoint")]),t._v("和"),s("code",[t._v("charCodePoint")]),t._v("等可以正确处理非常规字符的方法。")]),t._v(" "),s("h3",{attrs:{id:"number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),s("p",[t._v("JabaScript 中的 Number 类型基本符合"),s("strong",[t._v("IEEE 754-2008")]),t._v(" 规定的双精度浮点数规则，但JavaScript新增了几个表达额外场景的值：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("NaN")]),t._v(" 不是数字的数字")]),t._v(" "),s("li",[s("strong",[t._v("Infinity")]),t._v("，无穷大")]),t._v(" "),s("li",[s("strong",[t._v("-Infinity")]),t._v("，负无穷大")])]),t._v(" "),s("p",[t._v("JavaScript 中有 +0 和 -0，一般来说它们没有区别，但在除法中会有不同的地方。非0数字除以 -0 得到的是负无穷大，所以我们可以通过检测 1/x 的值是 Infinity 还是 -Infinity 来判断 x 是 +0 还是 -0。")]),t._v(" "),s("p",[t._v("根据浮点数的定义，非整数的 Number 类型在判断是否相等时可能会出现意外的结果。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("p",[t._v("这是浮点运算的特点，我们可以换一种方法来比较：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EPSILON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Number.EPSILON")]),t._v(" 可以获取最小精度值")]),t._v(" "),s("h3",{attrs:{id:"bigint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bigint"}},[t._v("#")]),t._v(" BigInt")]),t._v(" "),s("p",[s("code",[t._v("BigInt")]),t._v(" 数据类型的目的是比Number数据类型支持范围更大的整数值，在对大整数执行数学运算时，整数溢出不再是问题。")]),t._v(" "),s("p",[s("code",[t._v("BigInt")]),t._v(" 的使用方法很简单，在整数的末尾追加n即可。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740995n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740995n")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740995")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740996")]),t._v("\n")])])]),s("p",[t._v("或者调用 "),s("code",[t._v("BigInt()")]),t._v(" 构造函数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9007199254740995"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9007199254740995n")]),t._v("\n")])])]),s("h3",{attrs:{id:"symbol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[t._v("#")]),t._v(" Symbol")]),t._v(" "),s("p",[s("code",[t._v("Symbol")]),t._v(" 是ES6引入的新类型，它是一切非字符串的对象key的集合，在ES6规范中，整个对象系统被用 "),s("code",[t._v("Symbol")]),t._v(" 重塑。")]),t._v(" "),s("p",[s("code",[t._v("Symbol")]),t._v(" 可以具有字符串类型的描述，但即使描述相同，"),s("code",[t._v("Symbol")]),t._v(" 也不相等。")]),t._v(" "),s("p",[t._v("一般可以用全局的 "),s("code",[t._v("Symbol")]),t._v(" 函数创建 "),s("code",[t._v("Symbol")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" symbol "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'symbol'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("一些标准中提到的 "),s("code",[t._v("Symbol")]),t._v("，可以在全局的 "),s("code",[t._v("Symbol")]),t._v(" 函数的属性中找到。例如，我们可以使用 "),s("code",[t._v("Symbol.iterator")]),t._v(" 来定义 "),s("code",[t._v("for...of")]),t._v(" 在对象上的行为。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("\n\n    o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" done"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("        \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 1 2 3 ... 9")]),t._v("\n")])])]),s("h3",{attrs:{id:"object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),s("p",[t._v("在JavaScript中，对象的定义是“属性的集合”。属性分为数据属性和访问器属性，二者都是key-value结构，key可以是字符串或者Symbol类型。")]),t._v(" "),s("p",[t._v("JavaScript中的几个基本类型，都在对象类型中有相应的构造器。")]),t._v(" "),s("ul",[s("li",[t._v("Number")]),t._v(" "),s("li",[t._v("String")]),t._v(" "),s("li",[t._v("Boolean")]),t._v(" "),s("li",[t._v("Symbol")])]),t._v(" "),s("p",[t._v("3其实和new Number(3)是完全不同的，一个是基本类型，一个是对象类型。")]),t._v(" "),s("p",[t._v("但是基本类型却可以使用对象类型原型上的方法：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a")]),t._v("\n")])])]),s("p",[t._v("这是因为.操作符对相应的基本类型做了装箱操作，转为临时对象，使基本类型能够使用对象类型原型上的方法。接下来的类型转换会解释如何装箱及拆箱。")]),t._v(" "),s("h2",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),s("p",[t._v("JS是弱类型语言，所以类型转换很频繁，很多都是用户不清楚的隐性转换（这个时候就体现 "),s("code",[t._v("TypeScript")]),t._v(" 的重要性了……），所以几乎所有规范都建议大家使用 "),s("code",[t._v("===")]),t._v(" 全等，而不是 "),s("code",[t._v("==")]),t._v("，后者会试图跨类型比较，转换规则很复杂，有的转换也不符合直觉。")]),t._v(" "),s("p",[t._v("其他加减乘除，大于小于都可能发生类型转换，基本规则如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("kong")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Boolean")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Object")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Null")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("False")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'null'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TypeError")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Undefined")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("False")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("NaN")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'undefined'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TypeError")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean(true)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'true'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#装箱转换")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean(false)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'false'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#装箱转换")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Numbler")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("0,NaN-false")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#NumberToString")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#装箱转换")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("''-false")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#StringToNumber")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Symbol")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("True")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TypeError")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("'Symbol(symbol)'")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#装箱转换")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("True")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#拆箱转换")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("#拆箱转换")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])])])]),t._v(" "),s("p",[t._v("比较复杂的是Number和String之间的转换，以及对象与基本类型之间的装箱，拆箱操作。")]),t._v(" "),s("h3",{attrs:{id:"stringtonumber"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringtonumber"}},[t._v("#")]),t._v(" StringToNumber")]),t._v(" "),s("p",[t._v("字符串到数字转换，可以支持十进制，十六进制，二进制和八进制。")]),t._v(" "),s("ul",[s("li",[t._v("30")]),t._v(" "),s("li",[t._v("0b111  二进制")]),t._v(" "),s("li",[t._v("0o13 八进制")]),t._v(" "),s("li",[t._v("0xFF 十六进制")])]),t._v(" "),s("p",[t._v("还有科学计数法：")]),t._v(" "),s("ul",[s("li",[t._v("1e2")]),t._v(" "),s("li",[t._v("-1e-6")])]),t._v(" "),s("p",[s("code",[t._v("parseInt")]),t._v(" 和 "),s("code",[t._v("parseFloat")]),t._v(" 不支持科学计数法")]),t._v(" "),s("p",[s("code",[t._v("parseInt")]),t._v(" 第二个参数可以传入进制，如果忽略该参数，"),s("code",[t._v("parseInt")]),t._v(" 可以支持 "),s("code",[t._v("0x")]),t._v(" 开头的字符串，一些老版浏览器还支持 0 开头的作为8进制解析。")]),t._v(" "),s("p",[s("code",[t._v("parseFloat")]),t._v(" 可以转换浮点数，并且直接按照十进制来解析，不会引入进制概念。")]),t._v(" "),s("p",[s("code",[t._v("parseInt")]),t._v(" 和 "),s("code",[t._v("parseFloat")]),t._v(" 都会忽略字符串中非数字的解析，"),s("code",[t._v("Number")]),t._v(" 会把包含非数字的字符串转换为 "),s("code",[t._v("NaN")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"numbertostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#numbertostring"}},[t._v("#")]),t._v(" NumberToString")]),t._v(" "),s("p",[t._v("一般是直接转成字符串形式的数字，但如果数字范围过大话，可能会转为科学计数法的形式，保证字符串的长度不会过长。")]),t._v(" "),s("h3",{attrs:{id:"装箱转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#装箱转换"}},[t._v("#")]),t._v(" 装箱转换")]),t._v(" "),s("p",[t._v("每一种基本类型都能在对象中找到对应的类，装箱操作，就是把基本类型转为对应的对象类型。")]),t._v(" "),s("p",[t._v("装箱机制会频繁产生临时对象，对性能要求较高的场景，应尽量避免对基本类型做装箱转换。")]),t._v(" "),s("p",[t._v("使用内置Object函数，可以显式调用装箱操作。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" symbolObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" symbolObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//object")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("p",[t._v("每一种装箱对象都有私有的Class属性，可以用Object.prototype.toString获取：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" symbolObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [String Symbol]")]),t._v("\n")])])]),s("h3",{attrs:{id:"拆箱转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拆箱转换"}},[t._v("#")]),t._v(" 拆箱转换")]),t._v(" "),s("p",[t._v("JavaScript 规定了 "),s("code",[t._v("ToPrimitive")]),t._v(" 函数，可以对对象类型转换成基本类型。")]),t._v(" "),s("p",[t._v("对象到Number或者String的过程，遵循先转为基本类型，再转换为对应的String或Number的规则。")]),t._v(" "),s("p",[s("code",[t._v("ToPrimitive")]),t._v(" 转为基本类型时，是用的对象的默认值。使用的是内部的 "),s("code",[t._v("[[DefaultValue]](hint)")]),t._v("，拆箱操作根据 "),s("code",[t._v("hint")]),t._v(" 的不同采取不同的处理方式，"),s("code",[t._v("hit")]),t._v(" 是 "),s("code",[t._v("String")]),t._v(" 时优先调用 "),s("code",[t._v("toString")]),t._v(" 方法，反之则优先调用 "),s("code",[t._v("valueOf")]),t._v("，如果返回值不是基本类型，则会报错 "),s("code",[t._v("TypeError")]),t._v("。")]),t._v(" "),s("p",[t._v("除了日期外，如果没传 "),s("code",[t._v("hint")]),t._v(" 值，hint值默认为 "),s("code",[t._v("Number")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"valueOf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"toString"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// valueOf")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// toString")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError")]),t._v("\n")])])]),s("p",[t._v("而如果是日期")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Wed Feb 12 2020 11:54:51 GMT+0800 (中国标准时间)1"')]),t._v("\n")])])]),s("p",[t._v("或者显式传入hint")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"valueOf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"toString"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// toString")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// valueOf")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);